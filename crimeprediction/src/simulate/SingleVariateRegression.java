package simulate;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

import jdistlib.Poisson;



public class SingleVariateRegression {
	
	public static double ratio(float lambda,int a, int numRuns) {
		Poisson px = new Poisson(lambda*a);
		Poisson py = new Poisson(lambda);
		double ratio = 0;
		int count = 0;
		for (int i = 0; i < numRuns; i++) {
			double y = py.random();
			double x = px.random()/a;
			
			if (x > 0) {
				System.out.println(x+","+y);
				count +=1;
				ratio += y/x;
			}
		}
		
		return ratio/count;
	}
	
	
	/*** we assume half the events are generated by x ~ pois(a*lambda1), y ~ pois(lambda1).
	 *   and the other half similarily with lambda 2
	 * @param lambda1
	 * @param lambda2
	 * @param a
	 * @param numRuns
	 * @return
	 */
	public static double w(float lambda1, float lambda2, int a, int numRuns) {
		int perClusterRuns = numRuns/2;
		Poisson px1 = new Poisson(lambda1*a);
		Poisson px2 = new Poisson(lambda2*a);
		Poisson py1 = new Poisson(lambda1);
		Poisson py2 = new Poisson(lambda2);
		long sxy = 0;
		long sxx = 0;
		long sx = 0;
		long sy = 0;
		for (int i = 0 ; i < perClusterRuns; i++) {
			int x = (int) px1.random();
			int y = (int) py1.random();
			sxy += x * y;
			sxx += x*x;
			sx += x;
			sy += y;
		}
		
		for (int i = 0; i < perClusterRuns; i++) {
			int x = (int) px2.random();
			int y = (int) py2.random();
			sxy += x * y;
			sxx += x*x;
			sx += x;
			sy += y;
		}
		
		double meanx = sx/(double)numRuns;
		double meany = sy/(double)numRuns;
		double w = (sxy - numRuns*meanx*meany)/(sxx - numRuns*meanx*meanx);
		//System.out.println(sx+","+sy+","+w*a);
	
		return w;
	}
	
	public static void main(String[] args) throws IOException {
		//System.out.println(ratio(.05f,356,1000));
		BufferedWriter out = new BufferedWriter(new FileWriter("/home/finn/phd/data/20140204/w_sim.txt"));
		int a = 365;
		for (int i = 0; i < 10000; i++) {
			double wval = w(.01f,.005f,a,100000);
			out.write(Double.toString(wval));
			out.newLine();
		}
		
		System.out.println("DONE");
		out.close();
		//for (int i = 0; i < 1000; i++) {
			//System.out.println(ratio(.02f,356,100));
		//}
	}
	
	
	
	
	public static double runOnce(float[] baseRates, int D, int numCells, int days) {
		double xx = 0;
		int xy = 0;
		for (int i = 0; i < baseRates.length; i++) {
			Poisson py = new Poisson(baseRates[i]);
			Poisson px = new Poisson(D*baseRates[i]);
			
			for (int s = 0; s < numCells; s ++) {
				double x =  px.random()/D;
				for (int d = 0; d < days; d ++) {
					
					int y = (int)py.random();
					xx += x*x;
					xy += x*y;
				}	
			}
		}
		double w = xy/xx;
		return w;
	}
	
//	public static void main(String[] args) throws IOException {
//		BufferedWriter out = new BufferedWriter(new FileWriter("/home/finn/phd/data/20140203/10_houses.txt"));
//		int numHouses = 100000;
//		float[] baseRates = {.000273973f,0.000136986f}; //per house base rate = 1/10years and 1/20years
//		int housesPerCell = 10; //approx 40 for a 200mx200m cell
//		float[] cellRates = {baseRates[0]*housesPerCell, baseRates[1]*housesPerCell};
//		int numCells = numHouses/housesPerCell;
//		int D = 365;
//		int days = 100;
//		System.out.println("num_cells:"+numCells);
//		
//		int N = 10000;
//		float wtotal = 0;
//		for (int i = 0; i < N; i++) {
//			double w = runOnce(cellRates, D, numCells,days);
//			out.write(String.valueOf(w));
//			out.newLine();
//			System.out.println(w);
//			wtotal +=w;
//		}
//		System.out.println(wtotal/N);
//		out.close();
//	}
	
	

}
